前情回顾

1. threading创建线程
   
   Thread() 创建线程对象
   start()  启动线程
   join() 回收线程

2. 线程对象属性
3. 自定义线程类
   *  继承 Thread
   *  重写__init__ 和 run

4. 线程同步互斥
   通信： 全局变量

   同步互斥方法： Event  Lock

   死锁 ：多个线程因为资源的争夺造成锁混乱，无法继续执行，是不想看到的
      
      * 延迟处理
      * 使用RLock

5. GIL问题 ： 线程的效率低

   Single CPU: 8.688759326934814
   Single IO: 5.019381761550903

   Thread cpu: 8.914684772491455
   Thread io: 5.7498459815979
   
   Process CPU: 4.503059148788452
   Process io: 2.0465304851531982

***********************************************

ftp文件服务器思路分析

1. 技术点分析

   * 并发模型  多线程并发模式
   * 数据传输  tcp传输

2. 结构设计
   
   * 客户端发起请求，打印请求提示界面
   * 文件传输功能封装为类

3. 功能分析
   
   * 网络搭建
   * 查看文件库信息
   * 下载文件
   * 上传文件
   * 客户端退出

4. 协议

   L  表示请求文件列表
   Q  表示退出
   G  表示下载
   P  表示上传
  
作业： 1. 对重点代码进行熟悉
       2. 对ftp文件服务器进行思路梳理
       3. 复习http协议和httpserver1